//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Tue Dec  2 18:17:36 2014 (1417544256)
// Driver 340.65
//

.version 3.0
.target sm_30, texmode_independent
.address_size 32

.const .align 1 .b8 $str[31] = {99, 97, 110, 110, 111, 116, 32, 114, 101, 97, 100, 32, 95, 95, 119, 114, 105, 116, 101, 95, 111, 110, 108, 121, 32, 105, 109, 97, 103, 101, 0};
.const .align 1 .b8 $str1[31] = {99, 97, 110, 110, 111, 116, 32, 119, 114, 105, 116, 101, 32, 95, 95, 114, 101, 97, 100, 95, 111, 110, 108, 121, 32, 105, 109, 97, 103, 101, 0};
.const .align 1 .b8 num_pixels[14] = {1, 1, 2, 2, 3, 4, 4, 4, 1, 1, 0, 0, 0, 0};
.const .align 1 .b8 bytes_per_pixel[18] = {1, 2, 1, 2, 0, 0, 0, 1, 2, 4, 1, 2, 4, 2, 4, 0, 0, 0};
.const .align 1 .b8 bytes_override[18] = {0, 0, 0, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.visible .global .samplerref sampler = { addr_mode_0 = clamp_to_edge, addr_mode_1 = clamp_to_edge, addr_mode_2 = clamp_to_edge, filter_mode = nearest, force_unnormalized_coords = 1 };

.entry julia_filter(
	.param .f64 julia_filter_param_0,
	.param .u32 .ptr .const .align 16 julia_filter_param_1,
	.param .texref julia_filter_param_2,
	.param .surfref julia_filter_param_3,
	.param .u32 julia_filter_param_4,
	.param .u32 julia_filter_param_5,
	.param .u32 julia_filter_param_6,
	.param .u32 julia_filter_param_7
)
{
	.reg .f32 	%f<57>;
	.reg .f64 	%fd<249>;
	.reg .s16 	%rs<72>;
	.reg .pred 	%p<52>;
	.reg .s32 	%r<335>;
	.reg .s16 	%rc<53>;


	ld.param.f64 	%fd3, [julia_filter_param_0];
	ld.param.u32 	%r4, [julia_filter_param_6];
	// inline asm
	mov.u32 	%r17, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r18, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r19, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r20, %tid.x;
	// inline asm
	add.s32 	%r30, %r20, %r17;
	mad.lo.s32 	%r6, %r19, %r18, %r30;
	// inline asm
	mov.u32 	%r21, %envreg4;
	// inline asm
	// inline asm
	mov.u32 	%r22, %ntid.y;
	// inline asm
	// inline asm
	mov.u32 	%r23, %ctaid.y;
	// inline asm
	// inline asm
	mov.u32 	%r24, %tid.y;
	// inline asm
	add.s32 	%r31, %r24, %r21;
	mad.lo.s32 	%r7, %r23, %r22, %r31;
	// inline asm
	mov.u32 	%r25, %envreg6;
	// inline asm
	// inline asm
	mov.u32 	%r26, %ntid.x;
	// inline asm
	mul.lo.s32 	%r32, %r26, %r25;
	// inline asm
	mov.u32 	%r27, %envreg7;
	// inline asm
	// inline asm
	mov.u32 	%r28, %ntid.y;
	// inline asm
	mul.lo.s32 	%r33, %r28, %r27;
	cvt.rn.f64.u32 	%fd4, %r7;
	add.f64 	%fd5, %fd4, 0d3FE0000000000000;
	cvt.rn.f64.u32 	%fd6, %r33;
	div.rn.f64 	%fd7, %fd5, %fd6;
	cvt.rn.f32.f64 	%f1, %fd7;
	mov.u32 	%r333, 0;
	cvt.rn.f64.u32 	%fd8, %r6;
	add.f64 	%fd9, %fd8, 0d3FE0000000000000;
	cvt.rn.f64.u32 	%fd10, %r32;
	div.rn.f64 	%fd11, %fd9, %fd10;
	cvt.rn.f32.f64 	%f2, %fd11;
	cvt.f64.f32 	%fd12, %f1;
	mul.f64 	%fd13, %fd3, 0dC000000000000000;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd3;
	cvt.f64.f32 	%fd15, %f2;
	fma.rn.f64 	%fd16, %fd15, %fd13, %fd3;
	mov.f64 	%fd236, %fd14;
	mov.f64 	%fd247, %fd16;
	setp.gt.u32 	%p1, %r4, 1;
	mov.f64 	%fd237, %fd236;
	mov.f64 	%fd248, %fd247;

BB0_1:
	mov.f64 	%fd241, %fd248;
	mov.f64 	%fd204, %fd241;
	mov.f64 	%fd246, %fd247;
	mov.f64 	%fd230, %fd237;
	mov.f64 	%fd203, %fd230;
	mov.f64 	%fd235, %fd236;
	ld.param.u32 	%r332, [julia_filter_param_7];
	setp.lt.u32 	%p3, %r333, %r332;
	@%p3 bra 	BB0_3;

	mov.pred 	%p51, 0;
	bra.uni 	BB0_5;

BB0_3:
	mul.f64 	%fd17, %fd204, %fd204;
	fma.rn.f64 	%fd18, %fd203, %fd203, %fd17;
	mul.f64 	%fd21, %fd246, %fd246;
	fma.rn.f64 	%fd22, %fd235, %fd235, %fd21;
	setp.lt.f64 	%p5, %fd18, %fd22;
	selp.f64 	%fd236, %fd203, %fd235, %p5;
	selp.f64 	%fd247, %fd204, %fd246, %p5;
	setp.ltu.f64 	%p6, %fd18, 0d4010000000000000;
	@%p6 bra 	BB0_78;

	mov.pred 	%p51, -1;
	mov.f64 	%fd235, %fd236;
	mov.f64 	%fd246, %fd247;

BB0_5:
	mov.f64 	%fd27, 0d4010000000000000;
	mul.f64 	%fd221, %fd235, %fd27;
	mul.f64 	%fd222, %fd246, %fd27;
	selp.f64 	%fd223, %fd203, %fd221, %p51;
	selp.f64 	%fd224, %fd204, %fd222, %p51;
	mov.u32 	%r101, 0;
	add.f64 	%fd29, %fd223, 0d4010000000000000;
	div.rn.f64 	%fd30, %fd29, 0d4020000000000000;
	ld.param.u32 	%r329, [julia_filter_param_4];
	cvt.rn.f64.u32 	%fd31, %r329;
	mul.f64 	%fd24, %fd30, %fd31;
	add.f64 	%fd33, %fd224, 0d4010000000000000;
	div.rn.f64 	%fd34, %fd33, 0d4020000000000000;
	ld.param.u32 	%r330, [julia_filter_param_5];
	cvt.rn.f64.u32 	%fd35, %r330;
	mul.f64 	%fd26, %fd34, %fd35;
	// inline asm
	cvt.rmi.f64.f64 	%fd23, %fd24;
	// inline asm
	cvt.rzi.s32.f64 	%r102, %fd23;
	// inline asm
	cvt.rmi.f64.f64 	%fd25, %fd26;
	// inline asm
	cvt.rzi.s32.f64 	%r103, %fd25;
	cvt.rn.f64.s32 	%fd36, %r102;
	neg.f64 	%fd37, %fd36;
	fma.rn.f64 	%fd38, %fd30, %fd31, %fd37;
	cvt.rn.f64.s32 	%fd39, %r103;
	neg.f64 	%fd40, %fd39;
	fma.rn.f64 	%fd41, %fd34, %fd35, %fd40;
	mul.f64 	%fd42, %fd38, %fd38;
	mul.f64 	%fd43, %fd42, %fd38;
	fma.rn.f64 	%fd44, %fd38, %fd38, %fd42;
	neg.f64 	%fd45, %fd42;
	fma.rn.f64 	%fd46, %fd45, %fd38, %fd44;
	sub.f64 	%fd47, %fd46, %fd38;
	mul.f64 	%fd48, %fd43, 0d4008000000000000;
	mov.f64 	%fd49, 0d4014000000000000;
	fma.rn.f64 	%fd50, %fd45, %fd49, %fd48;
	add.f64 	%fd51, %fd50, 0d4000000000000000;
	mul.f64 	%fd52, %fd42, 0d4010000000000000;
	fma.rn.f64 	%fd53, %fd43, 0dC008000000000000, %fd52;
	add.f64 	%fd54, %fd53, %fd38;
	neg.f64 	%fd55, %fd38;
	fma.rn.f64 	%fd56, %fd55, %fd38, %fd43;
	add.s32 	%r104, %r103, -1;
	cvt.rn.f32.s32 	%f10, %r104;
	add.s32 	%r105, %r102, -1;
	cvt.rn.f32.s32 	%f27, %r105;
	// inline asm
	tex.2d.v4.s32.f32 {%r34, %r35, %r36, %r37}, [julia_filter_param_2, sampler, {%f27, %f10}];
	// inline asm
	cvt.rn.f64.u32 	%fd57, %r34;
	cvt.rn.f64.u32 	%fd58, %r35;
	cvt.rn.f64.u32 	%fd59, %r36;
	cvt.rn.f32.s32 	%f29, %r102;
	// inline asm
	tex.2d.v4.s32.f32 {%r38, %r39, %r40, %r41}, [julia_filter_param_2, sampler, {%f29, %f10}];
	// inline asm
	cvt.rn.f64.u32 	%fd60, %r38;
	cvt.rn.f64.u32 	%fd61, %r39;
	cvt.rn.f64.u32 	%fd62, %r40;
	add.s32 	%r106, %r102, 1;
	cvt.rn.f32.s32 	%f31, %r106;
	// inline asm
	tex.2d.v4.s32.f32 {%r42, %r43, %r44, %r45}, [julia_filter_param_2, sampler, {%f31, %f10}];
	// inline asm
	cvt.rn.f64.u32 	%fd63, %r42;
	cvt.rn.f64.u32 	%fd64, %r43;
	cvt.rn.f64.u32 	%fd65, %r44;
	add.s32 	%r107, %r102, 2;
	cvt.rn.f32.s32 	%f33, %r107;
	// inline asm
	tex.2d.v4.s32.f32 {%r46, %r47, %r48, %r49}, [julia_filter_param_2, sampler, {%f33, %f10}];
	// inline asm
	cvt.rn.f64.u32 	%fd66, %r46;
	cvt.rn.f64.u32 	%fd67, %r47;
	cvt.rn.f64.u32 	%fd68, %r48;
	mul.f64 	%fd69, %fd60, %fd51;
	fma.rn.f64 	%fd70, %fd57, %fd47, %fd69;
	fma.rn.f64 	%fd71, %fd63, %fd54, %fd70;
	fma.rn.f64 	%fd72, %fd66, %fd56, %fd71;
	div.rn.f64 	%fd73, %fd72, 0d4000000000000000;
	mul.f64 	%fd74, %fd61, %fd51;
	fma.rn.f64 	%fd75, %fd58, %fd47, %fd74;
	fma.rn.f64 	%fd76, %fd64, %fd54, %fd75;
	fma.rn.f64 	%fd77, %fd67, %fd56, %fd76;
	div.rn.f64 	%fd78, %fd77, 0d4000000000000000;
	mul.f64 	%fd79, %fd62, %fd51;
	fma.rn.f64 	%fd80, %fd59, %fd47, %fd79;
	fma.rn.f64 	%fd81, %fd65, %fd54, %fd80;
	fma.rn.f64 	%fd82, %fd68, %fd56, %fd81;
	div.rn.f64 	%fd83, %fd82, 0d4000000000000000;
	cvt.rn.f32.s32 	%f18, %r103;
	// inline asm
	tex.2d.v4.s32.f32 {%r50, %r51, %r52, %r53}, [julia_filter_param_2, sampler, {%f27, %f18}];
	// inline asm
	cvt.rn.f64.u32 	%fd84, %r50;
	cvt.rn.f64.u32 	%fd85, %r51;
	cvt.rn.f64.u32 	%fd86, %r52;
	// inline asm
	tex.2d.v4.s32.f32 {%r54, %r55, %r56, %r57}, [julia_filter_param_2, sampler, {%f29, %f18}];
	// inline asm
	cvt.rn.f64.u32 	%fd87, %r54;
	cvt.rn.f64.u32 	%fd88, %r55;
	cvt.rn.f64.u32 	%fd89, %r56;
	// inline asm
	tex.2d.v4.s32.f32 {%r58, %r59, %r60, %r61}, [julia_filter_param_2, sampler, {%f31, %f18}];
	// inline asm
	cvt.rn.f64.u32 	%fd90, %r58;
	cvt.rn.f64.u32 	%fd91, %r59;
	cvt.rn.f64.u32 	%fd92, %r60;
	// inline asm
	tex.2d.v4.s32.f32 {%r62, %r63, %r64, %r65}, [julia_filter_param_2, sampler, {%f33, %f18}];
	// inline asm
	cvt.rn.f64.u32 	%fd93, %r62;
	cvt.rn.f64.u32 	%fd94, %r63;
	cvt.rn.f64.u32 	%fd95, %r64;
	mul.f64 	%fd96, %fd87, %fd51;
	fma.rn.f64 	%fd97, %fd84, %fd47, %fd96;
	fma.rn.f64 	%fd98, %fd90, %fd54, %fd97;
	fma.rn.f64 	%fd99, %fd93, %fd56, %fd98;
	div.rn.f64 	%fd100, %fd99, 0d4000000000000000;
	mul.f64 	%fd101, %fd88, %fd51;
	fma.rn.f64 	%fd102, %fd85, %fd47, %fd101;
	fma.rn.f64 	%fd103, %fd91, %fd54, %fd102;
	fma.rn.f64 	%fd104, %fd94, %fd56, %fd103;
	div.rn.f64 	%fd105, %fd104, 0d4000000000000000;
	mul.f64 	%fd106, %fd89, %fd51;
	fma.rn.f64 	%fd107, %fd86, %fd47, %fd106;
	fma.rn.f64 	%fd108, %fd92, %fd54, %fd107;
	fma.rn.f64 	%fd109, %fd95, %fd56, %fd108;
	div.rn.f64 	%fd110, %fd109, 0d4000000000000000;
	add.s32 	%r108, %r103, 1;
	cvt.rn.f32.s32 	%f26, %r108;
	// inline asm
	tex.2d.v4.s32.f32 {%r66, %r67, %r68, %r69}, [julia_filter_param_2, sampler, {%f27, %f26}];
	// inline asm
	cvt.rn.f64.u32 	%fd111, %r66;
	cvt.rn.f64.u32 	%fd112, %r67;
	cvt.rn.f64.u32 	%fd113, %r68;
	// inline asm
	tex.2d.v4.s32.f32 {%r70, %r71, %r72, %r73}, [julia_filter_param_2, sampler, {%f29, %f26}];
	// inline asm
	cvt.rn.f64.u32 	%fd114, %r70;
	cvt.rn.f64.u32 	%fd115, %r71;
	cvt.rn.f64.u32 	%fd116, %r72;
	// inline asm
	tex.2d.v4.s32.f32 {%r74, %r75, %r76, %r77}, [julia_filter_param_2, sampler, {%f31, %f26}];
	// inline asm
	cvt.rn.f64.u32 	%fd117, %r74;
	cvt.rn.f64.u32 	%fd118, %r75;
	cvt.rn.f64.u32 	%fd119, %r76;
	// inline asm
	tex.2d.v4.s32.f32 {%r78, %r79, %r80, %r81}, [julia_filter_param_2, sampler, {%f33, %f26}];
	// inline asm
	cvt.rn.f64.u32 	%fd120, %r78;
	cvt.rn.f64.u32 	%fd121, %r79;
	cvt.rn.f64.u32 	%fd122, %r80;
	mul.f64 	%fd123, %fd114, %fd51;
	fma.rn.f64 	%fd124, %fd111, %fd47, %fd123;
	fma.rn.f64 	%fd125, %fd117, %fd54, %fd124;
	fma.rn.f64 	%fd126, %fd120, %fd56, %fd125;
	div.rn.f64 	%fd127, %fd126, 0d4000000000000000;
	mul.f64 	%fd128, %fd115, %fd51;
	fma.rn.f64 	%fd129, %fd112, %fd47, %fd128;
	fma.rn.f64 	%fd130, %fd118, %fd54, %fd129;
	fma.rn.f64 	%fd131, %fd121, %fd56, %fd130;
	div.rn.f64 	%fd132, %fd131, 0d4000000000000000;
	mul.f64 	%fd133, %fd116, %fd51;
	fma.rn.f64 	%fd134, %fd113, %fd47, %fd133;
	fma.rn.f64 	%fd135, %fd119, %fd54, %fd134;
	fma.rn.f64 	%fd136, %fd122, %fd56, %fd135;
	div.rn.f64 	%fd137, %fd136, 0d4000000000000000;
	add.s32 	%r109, %r103, 2;
	cvt.rn.f32.s32 	%f34, %r109;
	// inline asm
	tex.2d.v4.s32.f32 {%r82, %r83, %r84, %r85}, [julia_filter_param_2, sampler, {%f27, %f34}];
	// inline asm
	cvt.rn.f64.u32 	%fd138, %r82;
	cvt.rn.f64.u32 	%fd139, %r83;
	cvt.rn.f64.u32 	%fd140, %r84;
	// inline asm
	tex.2d.v4.s32.f32 {%r86, %r87, %r88, %r89}, [julia_filter_param_2, sampler, {%f29, %f34}];
	// inline asm
	cvt.rn.f64.u32 	%fd141, %r86;
	cvt.rn.f64.u32 	%fd142, %r87;
	cvt.rn.f64.u32 	%fd143, %r88;
	// inline asm
	tex.2d.v4.s32.f32 {%r90, %r91, %r92, %r93}, [julia_filter_param_2, sampler, {%f31, %f34}];
	// inline asm
	cvt.rn.f64.u32 	%fd144, %r90;
	cvt.rn.f64.u32 	%fd145, %r91;
	cvt.rn.f64.u32 	%fd146, %r92;
	// inline asm
	tex.2d.v4.s32.f32 {%r94, %r95, %r96, %r97}, [julia_filter_param_2, sampler, {%f33, %f34}];
	// inline asm
	cvt.rn.f64.u32 	%fd147, %r94;
	cvt.rn.f64.u32 	%fd148, %r95;
	cvt.rn.f64.u32 	%fd149, %r96;
	mul.f64 	%fd150, %fd141, %fd51;
	fma.rn.f64 	%fd151, %fd138, %fd47, %fd150;
	fma.rn.f64 	%fd152, %fd144, %fd54, %fd151;
	fma.rn.f64 	%fd153, %fd147, %fd56, %fd152;
	div.rn.f64 	%fd154, %fd153, 0d4000000000000000;
	mul.f64 	%fd155, %fd142, %fd51;
	fma.rn.f64 	%fd156, %fd139, %fd47, %fd155;
	fma.rn.f64 	%fd157, %fd145, %fd54, %fd156;
	fma.rn.f64 	%fd158, %fd148, %fd56, %fd157;
	div.rn.f64 	%fd159, %fd158, 0d4000000000000000;
	mul.f64 	%fd160, %fd143, %fd51;
	fma.rn.f64 	%fd161, %fd140, %fd47, %fd160;
	fma.rn.f64 	%fd162, %fd146, %fd54, %fd161;
	fma.rn.f64 	%fd163, %fd149, %fd56, %fd162;
	div.rn.f64 	%fd164, %fd163, 0d4000000000000000;
	mul.f64 	%fd165, %fd41, %fd41;
	mul.f64 	%fd166, %fd165, %fd41;
	fma.rn.f64 	%fd167, %fd41, %fd41, %fd165;
	neg.f64 	%fd168, %fd165;
	fma.rn.f64 	%fd169, %fd168, %fd41, %fd167;
	sub.f64 	%fd170, %fd169, %fd41;
	mul.f64 	%fd171, %fd166, 0d4008000000000000;
	fma.rn.f64 	%fd172, %fd168, %fd49, %fd171;
	add.f64 	%fd173, %fd172, 0d4000000000000000;
	mul.f64 	%fd174, %fd165, 0d4010000000000000;
	fma.rn.f64 	%fd175, %fd166, 0dC008000000000000, %fd174;
	add.f64 	%fd176, %fd175, %fd41;
	neg.f64 	%fd177, %fd41;
	fma.rn.f64 	%fd178, %fd177, %fd41, %fd166;
	mul.f64 	%fd179, %fd100, %fd173;
	fma.rn.f64 	%fd180, %fd73, %fd170, %fd179;
	fma.rn.f64 	%fd181, %fd127, %fd176, %fd180;
	fma.rn.f64 	%fd182, %fd154, %fd178, %fd181;
	div.rn.f64 	%fd183, %fd182, 0d4000000000000000;
	mul.f64 	%fd184, %fd105, %fd173;
	fma.rn.f64 	%fd185, %fd78, %fd170, %fd184;
	fma.rn.f64 	%fd186, %fd132, %fd176, %fd185;
	fma.rn.f64 	%fd187, %fd159, %fd178, %fd186;
	div.rn.f64 	%fd188, %fd187, 0d4000000000000000;
	mul.f64 	%fd189, %fd110, %fd173;
	fma.rn.f64 	%fd190, %fd83, %fd170, %fd189;
	fma.rn.f64 	%fd191, %fd137, %fd176, %fd190;
	fma.rn.f64 	%fd192, %fd164, %fd178, %fd191;
	div.rn.f64 	%fd193, %fd192, 0d4000000000000000;
	cvt.rzi.u32.f64 	%r9, %fd183;
	cvt.rzi.u32.f64 	%r10, %fd188;
	cvt.rzi.u32.f64 	%r11, %fd193;
	// inline asm
	suq.channel_order.b32 %r98, [julia_filter_param_3];
	// inline asm
	// inline asm
	suq.channel_data_type.b32 %r99, [julia_filter_param_3];
	// inline asm
	add.s32 	%r110, %r99, -4304;
	mov.u32 	%r111, bytes_per_pixel;
	add.s32 	%r112, %r111, %r110;
	mov.u32 	%r113, bytes_override;
	add.s32 	%r114, %r113, %r110;
	mov.u32 	%r115, num_pixels;
	add.s32 	%r116, %r98, %r115;
	ld.const.u8 	%r117, [%r116+-4272];
	ld.const.u8 	%r118, [%r114];
	ld.const.u8 	%r119, [%r112];
	mad.lo.s32 	%r120, %r119, %r117, %r118;
	mul.lo.s32 	%r13, %r120, %r7;
	setp.gt.s32 	%p8, %r98, 4275;
	@%p8 bra 	BB0_19;

	setp.gt.s32 	%p15, %r98, 4273;
	@%p15 bra 	BB0_13;

	setp.eq.s32 	%p18, %r98, 4272;
	@%p18 bra 	BB0_29;

	setp.eq.s32 	%p19, %r98, 4273;
	@%p19 bra 	BB0_9;
	bra.uni 	BB0_71;

BB0_9:
	// inline asm
	suq.channel_data_type.b32 %r158, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p26, %r158, 4314;
	@%p26 bra 	BB0_42;

	setp.eq.s32 	%p27, %r158, 4315;
	@%p27 bra 	BB0_41;

	setp.ne.s32 	%p28, %r158, 4316;
	@%p28 bra 	BB0_77;

	mov.u32 	%r163, 255;
	// inline asm
	sust.b.2d.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r163};
	// inline asm
	ret;

BB0_13:
	setp.eq.s32 	%p16, %r98, 4274;
	@%p16 bra 	BB0_35;

	setp.eq.s32 	%p17, %r98, 4275;
	@%p17 bra 	BB0_15;
	bra.uni 	BB0_71;

BB0_15:
	// inline asm
	suq.channel_data_type.b32 %r122, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p20, %r122, 4314;
	@%p20 bra 	BB0_34;

	setp.eq.s32 	%p21, %r122, 4315;
	@%p21 bra 	BB0_33;

	setp.ne.s32 	%p22, %r122, 4316;
	@%p22 bra 	BB0_77;

	mov.u32 	%r128, 255;
	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9, %r128};
	// inline asm
	ret;

BB0_19:
	setp.gt.s32 	%p9, %r98, 4277;
	@%p9 bra 	BB0_26;

	setp.eq.s32 	%p13, %r98, 4276;
	@%p13 bra 	BB0_45;

	setp.eq.s32 	%p14, %r98, 4277;
	@%p14 bra 	BB0_22;
	bra.uni 	BB0_71;

BB0_22:
	// inline asm
	suq.channel_data_type.b32 %r279, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p44, %r279, 4314;
	@%p44 bra 	BB0_70;

	setp.eq.s32 	%p45, %r279, 4315;
	@%p45 bra 	BB0_69;

	setp.ne.s32 	%p46, %r279, 4316;
	@%p46 bra 	BB0_77;

	mov.u32 	%r287, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9, %r10, %r11, %r287};
	// inline asm
	ret;

BB0_26:
	setp.eq.s32 	%p10, %r98, 4278;
	@%p10 bra 	BB0_63;

	setp.eq.s32 	%p11, %r98, 4279;
	@%p11 bra 	BB0_57;

	add.s32 	%r121, %r98, -4280;
	setp.lt.u32 	%p12, %r121, 2;
	@%p12 bra 	BB0_29;
	bra.uni 	BB0_71;

BB0_29:
	// inline asm
	suq.channel_data_type.b32 %r173, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p29, %r173, 4314;
	@%p29 bra 	BB0_44;

	setp.eq.s32 	%p30, %r173, 4315;
	@%p30 bra 	BB0_43;

	setp.ne.s32 	%p31, %r173, 4316;
	@%p31 bra 	BB0_77;

	// inline asm
	sust.b.2d.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9};
	// inline asm
	ret;

BB0_33:
	// inline asm
	cvt.sat.u16.u32 	%rs1, %r9;
	// inline asm
	mov.u32 	%r131, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs2, %r131;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs1, %rs2};
	// inline asm
	ret;

BB0_34:
	// inline asm
	cvt.sat.u8.u32 	%rc1, %r9;
	// inline asm
	mov.u32 	%r136, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc2, %r136;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc1, %rc2};
	// inline asm
	ret;

BB0_35:
	// inline asm
	suq.channel_data_type.b32 %r140, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p23, %r140, 4314;
	@%p23 bra 	BB0_40;

	setp.eq.s32 	%p24, %r140, 4315;
	@%p24 bra 	BB0_39;

	setp.ne.s32 	%p25, %r140, 4316;
	@%p25 bra 	BB0_77;

	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9, %r10};
	// inline asm
	ret;

BB0_39:
	// inline asm
	cvt.sat.u16.u32 	%rs5, %r9;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs6, %r10;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs5, %rs6};
	// inline asm
	ret;

BB0_40:
	// inline asm
	cvt.sat.u8.u32 	%rc5, %r9;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc6, %r10;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc5, %rc6};
	// inline asm
	ret;

BB0_41:
	mov.u32 	%r165, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs9, %r165;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs9};
	// inline asm
	ret;

BB0_42:
	mov.u32 	%r169, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc9, %r169;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc9};
	// inline asm
	ret;

BB0_43:
	// inline asm
	cvt.sat.u16.u32 	%rs11, %r9;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs11};
	// inline asm
	ret;

BB0_44:
	// inline asm
	cvt.sat.u8.u32 	%rc11, %r9;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc11};
	// inline asm
	ret;

BB0_45:
	setp.eq.s32 	%p32, %r99, 4308;
	@%p32 bra 	BB0_50;

	setp.eq.s32 	%p33, %r99, 4309;
	@%p33 bra 	BB0_49;

	setp.ne.s32 	%p34, %r99, 4310;
	@%p34 bra 	BB0_51;

	cvt.rn.f32.u32 	%f35, %r11;
	mov.f32 	%f36, 0f447FC000;
	mul.rn.f32 	%f37, %f35, %f36;
	cvt.rzi.u32.f32 	%r191, %f37;
	and.b32  	%r192, %r191, 1023;
	cvt.rn.f32.u32 	%f38, %r10;
	mul.rn.f32 	%f39, %f38, %f36;
	cvt.rzi.u32.f32 	%r193, %f39;
	shl.b32 	%r194, %r193, 10;
	and.b32  	%r195, %r194, 1047552;
	cvt.rn.f32.u32 	%f40, %r9;
	mul.rn.f32 	%f41, %f40, %f36;
	cvt.rzi.u32.f32 	%r196, %f41;
	shl.b32 	%r197, %r196, 20;
	and.b32  	%r198, %r197, 1072693248;
	or.b32  	%r199, %r195, %r192;
	or.b32  	%r190, %r199, %r198;
	// inline asm
	sust.b.2d.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r190};
	// inline asm
	ret;

BB0_49:
	cvt.rn.f32.u32 	%f42, %r11;
	mov.f32 	%f43, 0f41F80000;
	mul.rn.f32 	%f44, %f42, %f43;
	cvt.rzi.u16.f32 	%rs14, %f44;
	and.b16  	%rs15, %rs14, 31;
	cvt.rn.f32.u32 	%f45, %r10;
	mul.rn.f32 	%f46, %f45, %f43;
	cvt.rzi.u16.f32 	%rs16, %f46;
	shl.b16 	%rs17, %rs16, 5;
	and.b16  	%rs18, %rs17, 992;
	cvt.rn.f32.u32 	%f47, %r9;
	mul.rn.f32 	%f48, %f47, %f43;
	cvt.rzi.u16.f32 	%rs19, %f48;
	shl.b16 	%rs20, %rs19, 10;
	and.b16  	%rs21, %rs20, 31744;
	or.b16  	%rs22, %rs18, %rs15;
	or.b16  	%rs13, %rs22, %rs21;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs13};
	// inline asm
	ret;

BB0_50:
	cvt.rn.f32.u32 	%f49, %r11;
	mov.f32 	%f50, 0f41F80000;
	mul.rn.f32 	%f51, %f49, %f50;
	cvt.rzi.u16.f32 	%rs24, %f51;
	and.b16  	%rs25, %rs24, 31;
	cvt.rn.f32.u32 	%f52, %r10;
	mov.f32 	%f53, 0f427C0000;
	mul.rn.f32 	%f54, %f52, %f53;
	cvt.rzi.u16.f32 	%rs26, %f54;
	shl.b16 	%rs27, %rs26, 5;
	and.b16  	%rs28, %rs27, 2016;
	cvt.rn.f32.u32 	%f55, %r9;
	mul.rn.f32 	%f56, %f55, %f50;
	cvt.rzi.u16.f32 	%rs29, %f56;
	shl.b16 	%rs30, %rs29, 11;
	or.b16  	%rs31, %rs30, %rs25;
	or.b16  	%rs23, %rs31, %rs28;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs23};
	// inline asm
	ret;

BB0_51:
	// inline asm
	suq.channel_data_type.b32 %r207, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p35, %r207, 4314;
	@%p35 bra 	BB0_56;

	setp.eq.s32 	%p36, %r207, 4315;
	@%p36 bra 	BB0_55;

	setp.ne.s32 	%p37, %r207, 4316;
	@%p37 bra 	BB0_77;

	mov.u32 	%r215, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9, %r10, %r11, %r215};
	// inline asm
	ret;

BB0_55:
	// inline asm
	cvt.sat.u16.u32 	%rs32, %r9;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs33, %r10;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs34, %r11;
	// inline asm
	mov.u32 	%r220, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs35, %r220;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs32, %rs33, %rs34, %rs35};
	// inline asm
	ret;

BB0_56:
	// inline asm
	cvt.sat.u8.u32 	%rc13, %r9;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc14, %r10;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc15, %r11;
	// inline asm
	mov.u32 	%r227, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc16, %r227;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc13, %rc14, %rc15, %rc16};
	// inline asm
	ret;

BB0_57:
	// inline asm
	suq.channel_data_type.b32 %r231, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p38, %r231, 4314;
	@%p38 bra 	BB0_62;

	setp.eq.s32 	%p39, %r231, 4315;
	@%p39 bra 	BB0_61;

	setp.ne.s32 	%p40, %r231, 4316;
	@%p40 bra 	BB0_77;

	mov.u32 	%r236, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r236, %r9, %r10, %r11};
	// inline asm
	ret;

BB0_61:
	mov.u32 	%r241, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs40, %r241;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs41, %r9;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs42, %r10;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs43, %r11;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs40, %rs41, %rs42, %rs43};
	// inline asm
	ret;

BB0_62:
	mov.u32 	%r248, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc21, %r248;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc22, %r9;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc23, %r10;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc24, %r11;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc21, %rc22, %rc23, %rc24};
	// inline asm
	ret;

BB0_63:
	// inline asm
	suq.channel_data_type.b32 %r255, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p41, %r255, 4314;
	@%p41 bra 	BB0_68;

	setp.eq.s32 	%p42, %r255, 4315;
	@%p42 bra 	BB0_67;

	setp.ne.s32 	%p43, %r255, 4316;
	@%p43 bra 	BB0_77;

	mov.u32 	%r263, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r11, %r10, %r9, %r263};
	// inline asm
	ret;

BB0_67:
	// inline asm
	cvt.sat.u16.u32 	%rs48, %r11;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs49, %r10;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs50, %r9;
	// inline asm
	mov.u32 	%r268, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs51, %r268;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs48, %rs49, %rs50, %rs51};
	// inline asm
	ret;

BB0_68:
	// inline asm
	cvt.sat.u8.u32 	%rc29, %r11;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc30, %r10;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc31, %r9;
	// inline asm
	mov.u32 	%r275, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc32, %r275;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc29, %rc30, %rc31, %rc32};
	// inline asm
	ret;

BB0_69:
	// inline asm
	cvt.sat.u16.u32 	%rs56, %r9;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs57, %r10;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs58, %r11;
	// inline asm
	mov.u32 	%r292, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs59, %r292;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs56, %rs57, %rs58, %rs59};
	// inline asm
	ret;

BB0_70:
	// inline asm
	cvt.sat.u8.u32 	%rc37, %r9;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc38, %r10;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc39, %r11;
	// inline asm
	mov.u32 	%r299, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc40, %r299;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc37, %rc38, %rc39, %rc40};
	// inline asm
	ret;

BB0_71:
	// inline asm
	suq.channel_data_type.b32 %r303, [julia_filter_param_3];
	// inline asm
	setp.eq.s32 	%p47, %r303, 4314;
	@%p47 bra 	BB0_76;

	setp.eq.s32 	%p48, %r303, 4315;
	@%p48 bra 	BB0_75;

	setp.ne.s32 	%p49, %r303, 4316;
	@%p49 bra 	BB0_77;

	mov.u32 	%r311, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_param_3, {%r13, %r6}], {%r9, %r10, %r11, %r311};
	// inline asm
	ret;

BB0_75:
	// inline asm
	cvt.sat.u16.u32 	%rs64, %r9;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs65, %r10;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs66, %r11;
	// inline asm
	mov.u32 	%r316, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs67, %r316;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_param_3, {%r13, %r6}], {%rs64, %rs65, %rs66, %rs67};
	// inline asm
	ret;

BB0_76:
	// inline asm
	cvt.sat.u8.u32 	%rc45, %r9;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc46, %r10;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc47, %r11;
	// inline asm
	mov.u32 	%r323, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc48, %r323;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_param_3, {%r13, %r6}], {%rc45, %rc46, %rc47, %rc48};
	// inline asm

BB0_77:
	ret;

BB0_78:
	@%p1 bra 	BB0_80;

	mov.f64 	%fd233, %fd203;
	mov.f64 	%fd244, %fd204;
	bra.uni 	BB0_83;

BB0_80:
	mov.u32 	%r334, 1;
	mov.f64 	%fd234, %fd203;
	mov.f64 	%fd245, %fd204;

BB0_81:
	mov.f64 	%fd212, %fd245;
	mov.f64 	%fd211, %fd234;
	mul.f64 	%fd195, %fd211, %fd203;
	neg.f64 	%fd197, %fd212;
	fma.rn.f64 	%fd198, %fd197, %fd204, %fd195;
	mul.f64 	%fd199, %fd212, %fd203;
	fma.rn.f64 	%fd200, %fd211, %fd204, %fd199;
	mov.f64 	%fd205, %fd198;
	mov.f64 	%fd206, %fd200;
	add.s32 	%r334, %r334, 1;
	ld.param.u32 	%r331, [julia_filter_param_6];
	setp.lt.u32 	%p50, %r334, %r331;
	mov.f64 	%fd234, %fd205;
	mov.f64 	%fd245, %fd206;
	@%p50 bra 	BB0_81;

	mov.f64 	%fd233, %fd205;
	mov.f64 	%fd244, %fd206;

BB0_83:
	ld.param.u32 	%r328, [julia_filter_param_1];
	ld.const.v2.f64 	{%fd207, %fd208}, [%r328];
	add.f64 	%fd209, %fd233, %fd207;
	add.f64 	%fd210, %fd244, %fd208;
	add.s32 	%r333, %r333, 1;
	mov.f64 	%fd237, %fd209;
	mov.f64 	%fd248, %fd210;
	bra.uni 	BB0_1;
}

.entry julia_filter_no_input(
	.param .f64 julia_filter_no_input_param_0,
	.param .u32 .ptr .const .align 16 julia_filter_no_input_param_1,
	.param .surfref julia_filter_no_input_param_2,
	.param .u32 julia_filter_no_input_param_3,
	.param .u32 julia_filter_no_input_param_4
)
{
	.reg .f32 	%f<36>;
	.reg .f64 	%fd<108>;
	.reg .s16 	%rs<140>;
	.reg .pred 	%p<93>;
	.reg .s32 	%r<531>;
	.reg .s16 	%rc<105>;


	ld.param.f64 	%fd3, [julia_filter_no_input_param_0];
	ld.param.u32 	%r3, [julia_filter_no_input_param_4];
	// inline asm
	mov.u32 	%r28, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r29, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r30, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r31, %tid.x;
	// inline asm
	add.s32 	%r40, %r31, %r28;
	mad.lo.s32 	%r4, %r30, %r29, %r40;
	// inline asm
	mov.u32 	%r32, %envreg4;
	// inline asm
	// inline asm
	mov.u32 	%r33, %ntid.y;
	// inline asm
	// inline asm
	mov.u32 	%r34, %ctaid.y;
	// inline asm
	// inline asm
	mov.u32 	%r35, %tid.y;
	// inline asm
	add.s32 	%r41, %r35, %r32;
	mad.lo.s32 	%r5, %r34, %r33, %r41;
	// inline asm
	mov.u32 	%r36, %envreg6;
	// inline asm
	// inline asm
	mov.u32 	%r37, %ntid.x;
	// inline asm
	mul.lo.s32 	%r42, %r37, %r36;
	// inline asm
	mov.u32 	%r38, %envreg7;
	// inline asm
	// inline asm
	mov.u32 	%r39, %ntid.y;
	// inline asm
	mul.lo.s32 	%r43, %r39, %r38;
	cvt.rn.f64.u32 	%fd4, %r5;
	add.f64 	%fd5, %fd4, 0d3FE0000000000000;
	cvt.rn.f64.u32 	%fd6, %r43;
	div.rn.f64 	%fd7, %fd5, %fd6;
	cvt.rn.f32.f64 	%f1, %fd7;
	cvt.rn.f64.u32 	%fd8, %r4;
	add.f64 	%fd9, %fd8, 0d3FE0000000000000;
	cvt.rn.f64.u32 	%fd10, %r42;
	div.rn.f64 	%fd11, %fd9, %fd10;
	cvt.rn.f32.f64 	%f2, %fd11;
	cvt.f64.f32 	%fd12, %f1;
	mul.f64 	%fd13, %fd3, 0dC000000000000000;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd3;
	cvt.f64.f32 	%fd15, %f2;
	fma.rn.f64 	%fd16, %fd15, %fd13, %fd3;
	mov.f64 	%fd88, %fd14;
	mov.f64 	%fd106, %fd16;
	setp.eq.s32 	%p4, %r3, 0;
	@%p4 bra 	BB1_12;

	ld.param.u32 	%r512, [julia_filter_no_input_param_1];
	ld.const.v2.f64 	{%fd62, %fd63}, [%r512];
	mov.pred 	%p92, 0;
	mov.u32 	%r530, 0;
	ld.param.u32 	%r528, [julia_filter_no_input_param_4];
	mov.f64 	%fd89, %fd88;
	mov.f64 	%fd107, %fd106;

BB1_2:
	mov.f64 	%fd94, %fd106;
	mov.f64 	%fd57, %fd94;
	mov.f64 	%fd67, %fd104;
	mov.f64 	%fd76, %fd88;
	mov.f64 	%fd56, %fd76;
	mov.f64 	%fd66, %fd86;
	mov.u32 	%r524, %r530;
	mov.u32 	%r6, %r524;
	mov.u32 	%r529, %r528;
	mul.f64 	%fd17, %fd57, %fd57;
	fma.rn.f64 	%fd18, %fd56, %fd56, %fd17;
	mul.f64 	%fd21, %fd107, %fd107;
	fma.rn.f64 	%fd22, %fd89, %fd89, %fd21;
	setp.lt.f64 	%p6, %fd18, %fd22;
	selp.f64 	%fd89, %fd56, %fd89, %p6;
	selp.f64 	%fd107, %fd57, %fd107, %p6;
	setp.ltu.f64 	%p7, %fd18, 0d4010000000000000;
	@%p7 bra 	BB1_4;

	ld.param.u32 	%r519, [julia_filter_no_input_param_4];
	add.s32 	%r8, %r519, 1;
	mov.pred 	%p92, -1;
	mov.u32 	%r529, %r6;
	mov.u32 	%r527, %r8;
	mov.f64 	%fd87, %fd56;
	mov.f64 	%fd105, %fd57;
	bra.uni 	BB1_5;

BB1_4:
	mov.u32 	%r527, %r6;
	mov.f64 	%fd87, %fd66;
	mov.f64 	%fd105, %fd67;

BB1_5:
	mov.f64 	%fd92, %fd105;
	mov.f64 	%fd104, %fd92;
	mov.f64 	%fd74, %fd87;
	mov.f64 	%fd86, %fd74;
	mov.u32 	%r528, %r529;
	ld.param.u32 	%r514, [julia_filter_no_input_param_3];
	setp.gt.u32 	%p9, %r514, 1;
	@%p9 bra 	BB1_7;

	mov.f64 	%fd84, %fd56;
	mov.f64 	%fd102, %fd57;
	bra.uni 	BB1_10;

BB1_7:
	mov.u32 	%r520, 1;
	mov.f64 	%fd85, %fd56;
	mov.f64 	%fd103, %fd57;

BB1_8:
	mul.f64 	%fd24, %fd85, %fd56;
	neg.f64 	%fd26, %fd103;
	fma.rn.f64 	%fd27, %fd26, %fd57, %fd24;
	mul.f64 	%fd28, %fd103, %fd56;
	fma.rn.f64 	%fd29, %fd85, %fd57, %fd28;
	mov.f64 	%fd85, %fd27;
	mov.f64 	%fd103, %fd29;
	add.s32 	%r520, %r520, 1;
	ld.param.u32 	%r513, [julia_filter_no_input_param_3];
	setp.lt.u32 	%p10, %r520, %r513;
	@%p10 bra 	BB1_8;

	mov.f64 	%fd84, %fd85;
	mov.f64 	%fd102, %fd103;

BB1_10:
	add.f64 	%fd60, %fd84, %fd62;
	add.f64 	%fd61, %fd102, %fd63;
	add.s32 	%r13, %r527, 1;
	ld.param.u32 	%r518, [julia_filter_no_input_param_4];
	setp.lt.u32 	%p11, %r13, %r518;
	mov.u32 	%r530, %r13;
	mov.f64 	%fd88, %fd60;
	mov.f64 	%fd106, %fd61;
	@%p11 bra 	BB1_2;

	mov.u32 	%r526, %r528;
	mov.f64 	%fd83, %fd86;
	mov.f64 	%fd82, %fd89;
	mov.f64 	%fd101, %fd104;
	mov.f64 	%fd100, %fd107;
	bra.uni 	BB1_13;

BB1_12:
	mov.pred 	%p92, 0;
	ld.param.u32 	%r526, [julia_filter_no_input_param_4];
	mov.f64 	%fd82, %fd88;
	mov.f64 	%fd100, %fd106;

BB1_13:
	mov.f64 	%fd30, 0d4010000000000000;
	mul.f64 	%fd52, %fd82, %fd30;
	mul.f64 	%fd53, %fd100, %fd30;
	selp.f64 	%fd36, %fd83, %fd52, %p92;
	selp.f64 	%fd37, %fd101, %fd53, %p92;
	ld.param.u32 	%r515, [julia_filter_no_input_param_4];
	selp.b32 	%r15, %r526, %r515, %p92;
	setp.lt.u32 	%p13, %r15, %r515;
	@%p13 bra 	BB1_83;

	mov.u32 	%r51, 0;
	mul.f64 	%fd35, %fd37, %fd37;
	fma.rn.f64 	%fd32, %fd36, %fd36, %fd35;
	// inline asm
	sqrt.rn.f64 	%fd31, %fd32;
	// inline asm
	cvt.rzi.u32.f64 	%r52, %fd31;
	shl.b32 	%r47, %r52, 6;
	mov.u32 	%r48, 255;
	// inline asm
	min.u32 	%r46, %r47, %r48;
	// inline asm
	// inline asm
	suq.channel_order.b32 %r49, [julia_filter_no_input_param_2];
	// inline asm
	// inline asm
	suq.channel_data_type.b32 %r50, [julia_filter_no_input_param_2];
	// inline asm
	add.s32 	%r53, %r50, -4304;
	mov.u32 	%r54, bytes_per_pixel;
	add.s32 	%r55, %r54, %r53;
	mov.u32 	%r56, bytes_override;
	add.s32 	%r57, %r56, %r53;
	mov.u32 	%r58, num_pixels;
	add.s32 	%r59, %r49, %r58;
	ld.const.u8 	%r60, [%r59+-4272];
	ld.const.u8 	%r61, [%r57];
	ld.const.u8 	%r62, [%r55];
	mad.lo.s32 	%r63, %r62, %r60, %r61;
	mul.lo.s32 	%r19, %r63, %r5;
	setp.eq.s32 	%p14, %r49, 4277;
	@%p14 bra 	BB1_77;

	setp.eq.s32 	%p15, %r49, 4278;
	@%p15 bra 	BB1_71;

	setp.eq.s32 	%p16, %r49, 4279;
	@%p16 bra 	BB1_65;

	setp.eq.s32 	%p17, %r49, 4276;
	@%p17 bra 	BB1_53;

	add.s32 	%r64, %r49, -4272;
	setp.gt.u32 	%p18, %r64, 9;
	@%p18 bra 	BB1_26;

	mov.u32 	%r65, 1;
	shl.b32 	%r66, %r65, %r64;
	and.b32  	%r67, %r66, 769;
	setp.ne.s32 	%p19, %r67, 0;
	@%p19 bra 	BB1_20;
	bra.uni 	BB1_26;

BB1_20:
	// inline asm
	suq.channel_data_type.b32 %r68, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p20, %r68, 4314;
	@%p20 bra 	BB1_25;

	setp.eq.s32 	%p21, %r68, 4315;
	@%p21 bra 	BB1_24;

	setp.ne.s32 	%p22, %r68, 4316;
	@%p22 bra 	BB1_152;

	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46};
	// inline asm
	ret;

BB1_24:
	// inline asm
	cvt.sat.u16.u32 	%rs1, %r46;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs1};
	// inline asm
	ret;

BB1_25:
	// inline asm
	cvt.sat.u8.u32 	%rc1, %r46;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc1};
	// inline asm
	ret;

BB1_26:
	setp.eq.s32 	%p23, %r49, 4273;
	@%p23 bra 	BB1_47;

	setp.eq.s32 	%p24, %r49, 4274;
	@%p24 bra 	BB1_41;

	setp.eq.s32 	%p25, %r49, 4275;
	// inline asm
	suq.channel_data_type.b32 %r83, [julia_filter_no_input_param_2];
	// inline asm
	@%p25 bra 	BB1_35;

	setp.eq.s32 	%p26, %r83, 4314;
	@%p26 bra 	BB1_34;

	setp.eq.s32 	%p27, %r83, 4315;
	@%p27 bra 	BB1_33;

	setp.ne.s32 	%p28, %r83, 4316;
	@%p28 bra 	BB1_152;

	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r46, %r46, %r48};
	// inline asm
	ret;

BB1_33:
	// inline asm
	cvt.sat.u16.u32 	%rs3, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs4, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs5, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs6, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs3, %rs4, %rs5, %rs6};
	// inline asm
	ret;

BB1_34:
	// inline asm
	cvt.sat.u8.u32 	%rc3, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc4, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc5, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc6, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc3, %rc4, %rc5, %rc6};
	// inline asm
	ret;

BB1_35:
	setp.eq.s32 	%p29, %r83, 4314;
	@%p29 bra 	BB1_40;

	setp.eq.s32 	%p30, %r83, 4315;
	@%p30 bra 	BB1_39;

	setp.ne.s32 	%p31, %r83, 4316;
	@%p31 bra 	BB1_152;

	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r48};
	// inline asm
	ret;

BB1_39:
	// inline asm
	cvt.sat.u16.u32 	%rs11, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs12, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs11, %rs12};
	// inline asm
	ret;

BB1_40:
	// inline asm
	cvt.sat.u8.u32 	%rc11, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc12, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc11, %rc12};
	// inline asm
	ret;

BB1_41:
	// inline asm
	suq.channel_data_type.b32 %r121, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p32, %r121, 4314;
	@%p32 bra 	BB1_46;

	setp.eq.s32 	%p33, %r121, 4315;
	@%p33 bra 	BB1_45;

	setp.ne.s32 	%p34, %r121, 4316;
	@%p34 bra 	BB1_152;

	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r46};
	// inline asm
	ret;

BB1_45:
	// inline asm
	cvt.sat.u16.u32 	%rs15, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs16, %r46;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs15, %rs16};
	// inline asm
	ret;

BB1_46:
	// inline asm
	cvt.sat.u8.u32 	%rc15, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc16, %r46;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc15, %rc16};
	// inline asm
	ret;

BB1_47:
	// inline asm
	suq.channel_data_type.b32 %r139, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p35, %r139, 4314;
	@%p35 bra 	BB1_52;

	setp.eq.s32 	%p36, %r139, 4315;
	@%p36 bra 	BB1_51;

	setp.ne.s32 	%p37, %r139, 4316;
	@%p37 bra 	BB1_152;

	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r48};
	// inline asm
	ret;

BB1_51:
	// inline asm
	cvt.sat.u16.u32 	%rs19, %r48;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs19};
	// inline asm
	ret;

BB1_52:
	// inline asm
	cvt.sat.u8.u32 	%rc19, %r48;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc19};
	// inline asm
	ret;

BB1_53:
	setp.eq.s32 	%p38, %r50, 4308;
	@%p38 bra 	BB1_64;

	setp.eq.s32 	%p39, %r50, 4309;
	@%p39 bra 	BB1_63;

	setp.eq.s32 	%p40, %r50, 4310;
	@%p40 bra 	BB1_62;

	// inline asm
	suq.channel_data_type.b32 %r154, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p41, %r154, 4314;
	@%p41 bra 	BB1_61;

	setp.eq.s32 	%p42, %r154, 4315;
	@%p42 bra 	BB1_60;

	setp.ne.s32 	%p43, %r154, 4316;
	@%p43 bra 	BB1_152;

	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r46, %r46, %r48};
	// inline asm
	ret;

BB1_60:
	// inline asm
	cvt.sat.u16.u32 	%rs21, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs22, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs23, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs24, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs21, %rs22, %rs23, %rs24};
	// inline asm
	ret;

BB1_61:
	// inline asm
	cvt.sat.u8.u32 	%rc21, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc22, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc23, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc24, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc21, %rc22, %rc23, %rc24};
	// inline asm
	ret;

BB1_62:
	cvt.rn.f32.u32 	%f3, %r46;
	mov.f32 	%f4, 0f447FC000;
	mul.rn.f32 	%f5, %f3, %f4;
	cvt.rzi.u32.f32 	%r181, %f5;
	and.b32  	%r182, %r181, 1023;
	shl.b32 	%r183, %r181, 10;
	and.b32  	%r184, %r183, 1047552;
	shl.b32 	%r185, %r181, 20;
	and.b32  	%r186, %r185, 1072693248;
	or.b32  	%r187, %r184, %r182;
	or.b32  	%r180, %r187, %r186;
	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r180};
	// inline asm
	ret;

BB1_63:
	cvt.rn.f32.u32 	%f6, %r46;
	mov.f32 	%f7, 0f41F80000;
	mul.rn.f32 	%f8, %f6, %f7;
	cvt.rzi.u16.f32 	%rs30, %f8;
	and.b16  	%rs31, %rs30, 31;
	shl.b16 	%rs32, %rs30, 5;
	and.b16  	%rs33, %rs32, 992;
	shl.b16 	%rs34, %rs30, 10;
	and.b16  	%rs35, %rs34, 31744;
	or.b16  	%rs36, %rs33, %rs31;
	or.b16  	%rs29, %rs36, %rs35;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs29};
	// inline asm
	ret;

BB1_64:
	cvt.rn.f32.u32 	%f9, %r46;
	mov.f32 	%f10, 0f41F80000;
	mul.rn.f32 	%f11, %f9, %f10;
	cvt.rzi.u16.f32 	%rs38, %f11;
	and.b16  	%rs39, %rs38, 31;
	mov.f32 	%f12, 0f427C0000;
	mul.rn.f32 	%f13, %f9, %f12;
	cvt.rzi.u16.f32 	%rs40, %f13;
	shl.b16 	%rs41, %rs40, 5;
	and.b16  	%rs42, %rs41, 2016;
	shl.b16 	%rs43, %rs38, 11;
	or.b16  	%rs44, %rs43, %rs39;
	or.b16  	%rs37, %rs44, %rs42;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs37};
	// inline asm
	ret;

BB1_65:
	// inline asm
	suq.channel_data_type.b32 %r195, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p44, %r195, 4314;
	@%p44 bra 	BB1_70;

	setp.eq.s32 	%p45, %r195, 4315;
	@%p45 bra 	BB1_69;

	setp.ne.s32 	%p46, %r195, 4316;
	@%p46 bra 	BB1_152;

	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r48, %r46, %r46, %r46};
	// inline asm
	ret;

BB1_69:
	// inline asm
	cvt.sat.u16.u32 	%rs45, %r48;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs46, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs47, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs48, %r46;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs45, %rs46, %rs47, %rs48};
	// inline asm
	ret;

BB1_70:
	// inline asm
	cvt.sat.u8.u32 	%rc29, %r48;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc30, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc31, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc32, %r46;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc29, %rc30, %rc31, %rc32};
	// inline asm
	ret;

BB1_71:
	// inline asm
	suq.channel_data_type.b32 %r219, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p47, %r219, 4314;
	@%p47 bra 	BB1_76;

	setp.eq.s32 	%p48, %r219, 4315;
	@%p48 bra 	BB1_75;

	setp.ne.s32 	%p49, %r219, 4316;
	@%p49 bra 	BB1_152;

	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r46, %r46, %r48};
	// inline asm
	ret;

BB1_75:
	// inline asm
	cvt.sat.u16.u32 	%rs53, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs54, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs55, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs56, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs53, %rs54, %rs55, %rs56};
	// inline asm
	ret;

BB1_76:
	// inline asm
	cvt.sat.u8.u32 	%rc37, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc38, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc39, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc40, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc37, %rc38, %rc39, %rc40};
	// inline asm
	ret;

BB1_77:
	// inline asm
	suq.channel_data_type.b32 %r243, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p50, %r243, 4314;
	@%p50 bra 	BB1_82;

	setp.eq.s32 	%p51, %r243, 4315;
	@%p51 bra 	BB1_81;

	setp.ne.s32 	%p52, %r243, 4316;
	@%p52 bra 	BB1_152;

	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%r46, %r46, %r46, %r48};
	// inline asm
	ret;

BB1_81:
	// inline asm
	cvt.sat.u16.u32 	%rs61, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs62, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs63, %r46;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs64, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rs61, %rs62, %rs63, %rs64};
	// inline asm
	ret;

BB1_82:
	// inline asm
	cvt.sat.u8.u32 	%rc45, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc46, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc47, %r46;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc48, %r48;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r19, %r4}], {%rc45, %rc46, %rc47, %rc48};
	// inline asm
	ret;

BB1_83:
	mul.hi.u32 	%r269, %r15, 613566757;
	sub.s32 	%r270, %r15, %r269;
	shr.u32 	%r271, %r270, 1;
	add.s32 	%r272, %r271, %r269;
	shr.u32 	%r273, %r272, 2;
	mul.lo.s32 	%r274, %r273, 7;
	sub.s32 	%r275, %r15, %r274;
	mul.lo.s32 	%r276, %r275, 36;
	mul.hi.u32 	%r277, %r273, 613566757;
	sub.s32 	%r278, %r273, %r277;
	shr.u32 	%r279, %r278, 1;
	add.s32 	%r280, %r279, %r277;
	shr.u32 	%r281, %r280, 2;
	mul.lo.s32 	%r282, %r281, 7;
	sub.s32 	%r283, %r273, %r282;
	mul.lo.s32 	%r284, %r283, 36;
	mul.hi.u32 	%r285, %r15, 1402438301;
	shr.u32 	%r286, %r285, 4;
	mul.hi.u32 	%r287, %r286, 613566757;
	sub.s32 	%r288, %r286, %r287;
	shr.u32 	%r289, %r288, 1;
	add.s32 	%r290, %r289, %r287;
	shr.u32 	%r291, %r290, 2;
	mul.lo.s32 	%r292, %r291, 7;
	sub.s32 	%r293, %r286, %r292;
	mul.lo.s32 	%r294, %r293, 36;
	and.b32  	%r21, %r276, 252;
	and.b32  	%r22, %r284, 252;
	and.b32  	%r23, %r294, 252;
	mov.u32 	%r295, 0;
	// inline asm
	suq.channel_order.b32 %r267, [julia_filter_no_input_param_2];
	// inline asm
	// inline asm
	suq.channel_data_type.b32 %r268, [julia_filter_no_input_param_2];
	// inline asm
	add.s32 	%r296, %r268, -4304;
	mov.u32 	%r297, bytes_per_pixel;
	add.s32 	%r298, %r297, %r296;
	mov.u32 	%r299, bytes_override;
	add.s32 	%r300, %r299, %r296;
	mov.u32 	%r301, num_pixels;
	add.s32 	%r302, %r267, %r301;
	ld.const.u8 	%r303, [%r302+-4272];
	ld.const.u8 	%r304, [%r300];
	ld.const.u8 	%r305, [%r298];
	mad.lo.s32 	%r306, %r305, %r303, %r304;
	mul.lo.s32 	%r26, %r306, %r5;
	setp.eq.s32 	%p53, %r267, 4277;
	@%p53 bra 	BB1_146;

	setp.eq.s32 	%p54, %r267, 4278;
	@%p54 bra 	BB1_140;

	setp.eq.s32 	%p55, %r267, 4279;
	@%p55 bra 	BB1_134;

	setp.eq.s32 	%p56, %r267, 4276;
	@%p56 bra 	BB1_122;

	add.s32 	%r307, %r267, -4272;
	setp.gt.u32 	%p57, %r307, 9;
	@%p57 bra 	BB1_95;

	mov.u32 	%r308, 1;
	shl.b32 	%r309, %r308, %r307;
	and.b32  	%r310, %r309, 769;
	setp.ne.s32 	%p58, %r310, 0;
	@%p58 bra 	BB1_89;
	bra.uni 	BB1_95;

BB1_89:
	// inline asm
	suq.channel_data_type.b32 %r311, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p59, %r311, 4314;
	@%p59 bra 	BB1_94;

	setp.eq.s32 	%p60, %r311, 4315;
	@%p60 bra 	BB1_93;

	setp.ne.s32 	%p61, %r311, 4316;
	@%p61 bra 	BB1_152;

	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21};
	// inline asm
	ret;

BB1_93:
	// inline asm
	cvt.sat.u16.u32 	%rs69, %r21;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs69};
	// inline asm
	ret;

BB1_94:
	// inline asm
	cvt.sat.u8.u32 	%rc53, %r21;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc53};
	// inline asm
	ret;

BB1_95:
	setp.eq.s32 	%p62, %r267, 4273;
	@%p62 bra 	BB1_116;

	setp.eq.s32 	%p63, %r267, 4274;
	@%p63 bra 	BB1_110;

	setp.eq.s32 	%p64, %r267, 4275;
	// inline asm
	suq.channel_data_type.b32 %r326, [julia_filter_no_input_param_2];
	// inline asm
	@%p64 bra 	BB1_104;

	setp.eq.s32 	%p65, %r326, 4314;
	@%p65 bra 	BB1_103;

	setp.eq.s32 	%p66, %r326, 4315;
	@%p66 bra 	BB1_102;

	setp.ne.s32 	%p67, %r326, 4316;
	@%p67 bra 	BB1_152;

	mov.u32 	%r333, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21, %r22, %r23, %r333};
	// inline asm
	ret;

BB1_102:
	// inline asm
	cvt.sat.u16.u32 	%rs71, %r21;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs72, %r22;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs73, %r23;
	// inline asm
	mov.u32 	%r338, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs74, %r338;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs71, %rs72, %rs73, %rs74};
	// inline asm
	ret;

BB1_103:
	// inline asm
	cvt.sat.u8.u32 	%rc55, %r21;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc56, %r22;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc57, %r23;
	// inline asm
	mov.u32 	%r345, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc58, %r345;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc55, %rc56, %rc57, %rc58};
	// inline asm
	ret;

BB1_104:
	setp.eq.s32 	%p68, %r326, 4314;
	@%p68 bra 	BB1_109;

	setp.eq.s32 	%p69, %r326, 4315;
	@%p69 bra 	BB1_108;

	setp.ne.s32 	%p70, %r326, 4316;
	@%p70 bra 	BB1_152;

	mov.u32 	%r352, 255;
	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21, %r352};
	// inline asm
	ret;

BB1_108:
	// inline asm
	cvt.sat.u16.u32 	%rs79, %r21;
	// inline asm
	mov.u32 	%r355, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs80, %r355;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs79, %rs80};
	// inline asm
	ret;

BB1_109:
	// inline asm
	cvt.sat.u8.u32 	%rc63, %r21;
	// inline asm
	mov.u32 	%r360, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc64, %r360;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc63, %rc64};
	// inline asm
	ret;

BB1_110:
	// inline asm
	suq.channel_data_type.b32 %r364, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p71, %r364, 4314;
	@%p71 bra 	BB1_115;

	setp.eq.s32 	%p72, %r364, 4315;
	@%p72 bra 	BB1_114;

	setp.ne.s32 	%p73, %r364, 4316;
	@%p73 bra 	BB1_152;

	// inline asm
	sust.b.2d.v2.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21, %r22};
	// inline asm
	ret;

BB1_114:
	// inline asm
	cvt.sat.u16.u32 	%rs83, %r21;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs84, %r22;
	// inline asm
	// inline asm
	sust.b.2d.v2.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs83, %rs84};
	// inline asm
	ret;

BB1_115:
	// inline asm
	cvt.sat.u8.u32 	%rc67, %r21;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc68, %r22;
	// inline asm
	// inline asm
	sust.b.2d.v2.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc67, %rc68};
	// inline asm
	ret;

BB1_116:
	// inline asm
	suq.channel_data_type.b32 %r382, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p74, %r382, 4314;
	@%p74 bra 	BB1_121;

	setp.eq.s32 	%p75, %r382, 4315;
	@%p75 bra 	BB1_120;

	setp.ne.s32 	%p76, %r382, 4316;
	@%p76 bra 	BB1_152;

	mov.u32 	%r387, 255;
	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r387};
	// inline asm
	ret;

BB1_120:
	mov.u32 	%r389, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs87, %r389;
	// inline asm
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs87};
	// inline asm
	ret;

BB1_121:
	mov.u32 	%r393, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc71, %r393;
	// inline asm
	// inline asm
	sust.b.2d.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc71};
	// inline asm
	ret;

BB1_122:
	setp.eq.s32 	%p77, %r268, 4308;
	@%p77 bra 	BB1_133;

	setp.eq.s32 	%p78, %r268, 4309;
	@%p78 bra 	BB1_132;

	setp.eq.s32 	%p79, %r268, 4310;
	@%p79 bra 	BB1_131;

	// inline asm
	suq.channel_data_type.b32 %r397, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p80, %r397, 4314;
	@%p80 bra 	BB1_130;

	setp.eq.s32 	%p81, %r397, 4315;
	@%p81 bra 	BB1_129;

	setp.ne.s32 	%p82, %r397, 4316;
	@%p82 bra 	BB1_152;

	mov.u32 	%r405, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21, %r22, %r23, %r405};
	// inline asm
	ret;

BB1_129:
	// inline asm
	cvt.sat.u16.u32 	%rs89, %r21;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs90, %r22;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs91, %r23;
	// inline asm
	mov.u32 	%r410, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs92, %r410;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs89, %rs90, %rs91, %rs92};
	// inline asm
	ret;

BB1_130:
	// inline asm
	cvt.sat.u8.u32 	%rc73, %r21;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc74, %r22;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc75, %r23;
	// inline asm
	mov.u32 	%r417, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc76, %r417;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc73, %rc74, %rc75, %rc76};
	// inline asm
	ret;

BB1_131:
	cvt.rn.f32.u32 	%f14, %r23;
	mov.f32 	%f15, 0f447FC000;
	mul.rn.f32 	%f16, %f14, %f15;
	cvt.rzi.u32.f32 	%r424, %f16;
	and.b32  	%r425, %r424, 1023;
	cvt.rn.f32.u32 	%f17, %r22;
	mul.rn.f32 	%f18, %f17, %f15;
	cvt.rzi.u32.f32 	%r426, %f18;
	shl.b32 	%r427, %r426, 10;
	and.b32  	%r428, %r427, 1047552;
	cvt.rn.f32.u32 	%f19, %r21;
	mul.rn.f32 	%f20, %f19, %f15;
	cvt.rzi.u32.f32 	%r429, %f20;
	shl.b32 	%r430, %r429, 20;
	and.b32  	%r431, %r430, 1072693248;
	or.b32  	%r432, %r428, %r425;
	or.b32  	%r423, %r432, %r431;
	// inline asm
	sust.b.2d.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r423};
	// inline asm
	ret;

BB1_132:
	cvt.rn.f32.u32 	%f21, %r23;
	mov.f32 	%f22, 0f41F80000;
	mul.rn.f32 	%f23, %f21, %f22;
	cvt.rzi.u16.f32 	%rs98, %f23;
	and.b16  	%rs99, %rs98, 31;
	cvt.rn.f32.u32 	%f24, %r22;
	mul.rn.f32 	%f25, %f24, %f22;
	cvt.rzi.u16.f32 	%rs100, %f25;
	shl.b16 	%rs101, %rs100, 5;
	and.b16  	%rs102, %rs101, 992;
	cvt.rn.f32.u32 	%f26, %r21;
	mul.rn.f32 	%f27, %f26, %f22;
	cvt.rzi.u16.f32 	%rs103, %f27;
	shl.b16 	%rs104, %rs103, 10;
	and.b16  	%rs105, %rs104, 31744;
	or.b16  	%rs106, %rs102, %rs99;
	or.b16  	%rs97, %rs106, %rs105;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs97};
	// inline asm
	ret;

BB1_133:
	cvt.rn.f32.u32 	%f28, %r23;
	mov.f32 	%f29, 0f41F80000;
	mul.rn.f32 	%f30, %f28, %f29;
	cvt.rzi.u16.f32 	%rs108, %f30;
	and.b16  	%rs109, %rs108, 31;
	cvt.rn.f32.u32 	%f31, %r22;
	mov.f32 	%f32, 0f427C0000;
	mul.rn.f32 	%f33, %f31, %f32;
	cvt.rzi.u16.f32 	%rs110, %f33;
	shl.b16 	%rs111, %rs110, 5;
	and.b16  	%rs112, %rs111, 2016;
	cvt.rn.f32.u32 	%f34, %r21;
	mul.rn.f32 	%f35, %f34, %f29;
	cvt.rzi.u16.f32 	%rs113, %f35;
	shl.b16 	%rs114, %rs113, 11;
	or.b16  	%rs115, %rs114, %rs109;
	or.b16  	%rs107, %rs115, %rs112;
	// inline asm
	sust.b.2d.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs107};
	// inline asm
	ret;

BB1_134:
	// inline asm
	suq.channel_data_type.b32 %r440, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p83, %r440, 4314;
	@%p83 bra 	BB1_139;

	setp.eq.s32 	%p84, %r440, 4315;
	@%p84 bra 	BB1_138;

	setp.ne.s32 	%p85, %r440, 4316;
	@%p85 bra 	BB1_152;

	mov.u32 	%r445, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r445, %r21, %r22, %r23};
	// inline asm
	ret;

BB1_138:
	mov.u32 	%r450, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs116, %r450;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs117, %r21;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs118, %r22;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs119, %r23;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs116, %rs117, %rs118, %rs119};
	// inline asm
	ret;

BB1_139:
	mov.u32 	%r457, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc81, %r457;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc82, %r21;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc83, %r22;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc84, %r23;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc81, %rc82, %rc83, %rc84};
	// inline asm
	ret;

BB1_140:
	// inline asm
	suq.channel_data_type.b32 %r464, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p86, %r464, 4314;
	@%p86 bra 	BB1_145;

	setp.eq.s32 	%p87, %r464, 4315;
	@%p87 bra 	BB1_144;

	setp.ne.s32 	%p88, %r464, 4316;
	@%p88 bra 	BB1_152;

	mov.u32 	%r472, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r23, %r22, %r21, %r472};
	// inline asm
	ret;

BB1_144:
	// inline asm
	cvt.sat.u16.u32 	%rs124, %r23;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs125, %r22;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs126, %r21;
	// inline asm
	mov.u32 	%r477, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs127, %r477;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs124, %rs125, %rs126, %rs127};
	// inline asm
	ret;

BB1_145:
	// inline asm
	cvt.sat.u8.u32 	%rc89, %r23;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc90, %r22;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc91, %r21;
	// inline asm
	mov.u32 	%r484, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc92, %r484;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc89, %rc90, %rc91, %rc92};
	// inline asm
	ret;

BB1_146:
	// inline asm
	suq.channel_data_type.b32 %r488, [julia_filter_no_input_param_2];
	// inline asm
	setp.eq.s32 	%p89, %r488, 4314;
	@%p89 bra 	BB1_151;

	setp.eq.s32 	%p90, %r488, 4315;
	@%p90 bra 	BB1_150;

	setp.ne.s32 	%p91, %r488, 4316;
	@%p91 bra 	BB1_152;

	mov.u32 	%r496, 255;
	// inline asm
	sust.b.2d.v4.b32.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%r21, %r22, %r23, %r496};
	// inline asm
	ret;

BB1_150:
	// inline asm
	cvt.sat.u16.u32 	%rs132, %r21;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs133, %r22;
	// inline asm
	// inline asm
	cvt.sat.u16.u32 	%rs134, %r23;
	// inline asm
	mov.u32 	%r501, 255;
	// inline asm
	cvt.sat.u16.u32 	%rs135, %r501;
	// inline asm
	// inline asm
	sust.b.2d.v4.b16.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rs132, %rs133, %rs134, %rs135};
	// inline asm
	ret;

BB1_151:
	// inline asm
	cvt.sat.u8.u32 	%rc97, %r21;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc98, %r22;
	// inline asm
	// inline asm
	cvt.sat.u8.u32 	%rc99, %r23;
	// inline asm
	mov.u32 	%r508, 255;
	// inline asm
	cvt.sat.u8.u32 	%rc100, %r508;
	// inline asm
	// inline asm
	sust.b.2d.v4.b8.trap [julia_filter_no_input_param_2, {%r26, %r4}], {%rc97, %rc98, %rc99, %rc100};
	// inline asm

BB1_152:
	ret;
}


